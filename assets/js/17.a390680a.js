(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{529:function(n,t,e){"use strict";e.r(t);var l=e(20),p=Object(l.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("单元测试：\n定义：对软件基本组成单元（模块）进行测试，确保模块被正确地编码。\n依据：软件详细设计书\n执行者：以程序员为主，测试员为辅\n方法：通常情况下是白盒的，对代码风格和规则、程序设计和结构、业务逻辑等进行静态测试。")]),n._v(" "),e("p",[n._v("集成测试：\n定义：将已通过测试的单元，按设计要求组合起来再进行的测试，以检查这些单元之间的接口是否存在问题。\n依据：软件概要设计书。\n执行者：以测试员为主，程序员为辅。\n方法：黑盒\n采用增量集成。避免一次性集成（除非软件规模很小）。\n自顶向下集成：首先集成主模块，然后按照控制层次结构向下进行集成。\n自底向上集成：首先从原子模块进行构造和测试。")]),n._v(" "),e("p",[n._v("系统测试：\n定义：针对整个产品系统进行的测试。测试的对象不仅仅包括产品系统的软件，还要包含软件所依赖的硬件、外设以及一些支持软件等。所以，需要将系统中的软件与各种依赖的资源结合起来，在系统实际的运行环境下进行测试。\n依据：软件需求规格书\n执行者：测试员\n方法：黑盒")]),n._v(" "),e("p",[n._v("回归测试：在发生修改之后重新测试先前的测试用例以确保修改的正确性。目标是验证之前出现过但已经修复好的缺陷不再重新出现。一般对之前的缺陷再次围绕它出现时的步骤重新测试。")]),n._v(" "),e("p",[n._v("验收测试：由相关的用户或独立的测试人员根据测试计划和结果对系统进行测试和接收。它让系统用户决定是否接收系统。\nAlpha测试：由用户在开发者的场所进行，在一个受控的环境中进行。\nBeta测试：由用户在一个或多个用户场所进行，开发者通常不在现场。用户记录测试中遇到的问题并报告给开发者，开发者对系统进行最后的修改，并开始准备发布最终的软件。")])])}),[],!1,null,null,null);t.default=p.exports}}]);